Gracefully shutting down the Kubernetes master node involves ensuring that any critical processes or workloads running on the node are safely stopped without disrupting the overall cluster. Below are the steps to safely shut down your master node in WSL2:

---

### Step 1: **Drain the Master Node**
Draining the master node ensures that all workloads (Pods) running on the node are evicted and rescheduled to other nodes in the cluster.

Run the following command:

kubectl drain <master-node-name> --ignore-daemonsets --delete-emptydir-data

- Replace `<master-node-name>` with the name of your master node (e.g., `wentao`).
- The `--ignore-daemonsets` flag ensures that DaemonSet-managed pods (e.g., kube-proxy, kube-flannel) are not evicted.
- The `--delete-emptydir-data` flag ensures that pods using `emptyDir` volumes are deleted.

This command will:
1. Mark the node as **unschedulable** (no new Pods will be scheduled on it).
2. Evict all non-DaemonSet-managed Pods running on the node.

---

### Step 2: **Check Node Status**
Verify that the master node is now in a `SchedulingDisabled` state and has no workloads running:

kubectl get nodes

You should see something like this:

NAME      STATUS                     ROLES    AGE   VERSION
wentao    Ready,SchedulingDisabled   master   1d    v1.26.0
rl01      Ready                      worker   1d    v1.26.0


---

### Step 3: **Backup Configuration and State**
Before shutting down the master node, ensure you back up critical Kubernetes configuration files and data:
1. **Configuration Files**:

   cp -r /etc/kubernetes /path/to/backup/

2. **etcd Data** (if running etcd locally):

   cp -r /var/lib/etcd /path/to/backup/


---

### Step 4: **Stop Kubernetes Services**
Stop the Kubernetes control plane components running on the master node (e.g., kube-apiserver, kube-scheduler, kube-controller-manager) and the kubelet service.

Run the following commands:

sudo systemctl stop kubelet
sudo systemctl stop docker


---

### Step 5: **Shutdown WSL2 Instance**
Once Kubernetes services are stopped, you can safely shut down the WSL2 instance:

wsl --shutdown

---

### Step 6: **Reconfigure WSL2 with Bridged Networking**
After shutting down WSL2, follow the steps to configure bridged networking for your WSL2 instance. Once the bridged network is set up, restart the WSL2 instance and bring the master node back online.

---

### Step 7: **Bring the Master Node Back Online**
1. Start the WSL2 instance:
   ```bash
   wsl
   ```

2. Start the Kubernetes services:
   ```bash
   sudo systemctl start docker
   sudo systemctl start kubelet
   ```

3. Verify that the master node is back to a `Ready` state:
   ```bash
   kubectl get nodes
   ```

4. Uncordon the master node to make it schedulable again:
   ```bash
   kubectl uncordon <master-node-name>
   ```

---

Let me know if you need further guidance on any of these steps!



Later, after you changed the wsl2 network to bridge, and modify restart all of the components, use below command to uncordon the node

kubectl uncordon wentao

This will bring the node to normal
