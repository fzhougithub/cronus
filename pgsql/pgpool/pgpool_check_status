#!/bin/bash

PGPOOL_PORT=9999
PGPOOL_USER=postgres
PGPOOL_DB=fzhou
PGPOOL_HOST=localhost

# Check for defunct pgpool processes
DEFUNCT_COUNT=$(ps -ef | grep '[p]gpool' | grep -c '<defunct>')

if [ "$DEFUNCT_COUNT" -gt 0 ]; then
    echo "Found $DEFUNCT_COUNT defunct pgpool processes. Restarting pgpool2..."
    systemctl restart pgpool2
    sleep 5
else
    # Check for wait-for-connection processes
    WAIT_COUNT=$(ps -ef | grep '[p]gpool' | grep -c 'wait for connection request')
    if [ "$WAIT_COUNT" -gt 0 ]; then
        echo "Pgpool is in wait state with $WAIT_COUNT. Running test query..."

        # Run the SHOW pool_nodes command and capture output
        OUTPUT=$(psql "host=$PGPOOL_HOST port=$PGPOOL_PORT dbname=$PGPOOL_DB user=$PGPOOL_USER" -c "show pool_nodes" 2>&1)
        STATUS=$?

        if [ $STATUS -ne 0 ]; then
            echo "Critical, Primary Down"
            echo "psql error:"
            echo "$OUTPUT"
        else
            echo "Pgpool is responsive."

            # Check if any standby node has inconsistent status (status=down but pg_status=up)
            BAD_STANDBY=$(echo "$OUTPUT" | awk -F '|' '$7 ~ /standby/ && $4 ~ /down/ && $5 ~ /up/ { print }')
            NORMAL_DOWN=$(echo "$OUTPUT" | awk -F '|' '$7 ~ /standby/ && $4 ~ /down/ && $5 ~ /down/ { print }')

            if [ -n "$BAD_STANDBY" ]; then
                echo "Standby in inconsistent state (status=down but pg_status=up). Restarting pgpool2..."
                echo "$BAD_STANDBY"
                systemctl restart pgpool2
            elif [ -n "$NORMAL_DOWN" ]; then
                echo "Warn: standby down"
                echo "$NORMAL_DOWN"
            fi
        fi
    else
        echo "Pgpool is not in wait state and no defunct process found."
    fi
fi

