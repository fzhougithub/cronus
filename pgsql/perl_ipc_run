All of below solution from AI tools are garbage

The perl-IPC-Run package is not typically included in the base Rocky Linux 9 repositories. To install it, you need to enable the CodeReady Builder (CRB) repository, which provides additional packages. You can then use the dnf package manager to install the package. 
Here's a step-by-step guide:

Enable the CRB repository:
Open the /etc/yum.repos.d/rocky.repo file using a text editor.
Locate the [crb] section.
Change enabled=0 to enabled=1.
Save the file.
Run the command: 

sudo dnf update. 

Install the perl-IPC-Run package:
Use the following command: 

sudo dnf install perl-IPC-Run

Optional: Check for dependencies:
If you encounter issues, you might also need to install perl-IO-Tty as a dependency, using sudo dnf install perl-IO-Tty. 


The CodeReady Linux Builder (CRB) repository is a supplementary repository in Red Hat Enterprise Linux (RHEL) that provides additional packages for developers. It's available with all RHEL subscriptions but doesn't require enabling on runtime deployments. CRB includes packages, support information, and subscriber-exclusive content.

Key points about the CRB repository:
Purpose:
It's designed to offer tools and libraries that are useful for developing applications on RHEL, particularly those that are not included in the BaseOS or AppStream repositories. 
Access:
It's part of the overall Red Hat subscription and doesn't require separate purchase or enabling, but it's not typically enabled by default on all RHEL deployments, according to the Red Hat documentation. 
Content:
The CRB repository contains a wide range of packages, including development tools, header files, and libraries for various languages and frameworks. 
Support:
While packages within CRB are available, they are generally considered unsupported by Red Hat. 
Alternatives:
The Rocky Linux wiki also mentions the CRB repository and its role as a supplemental repository for additional packages, often referred to as the "PowerTools" repository. 
===================================






Either 
 cpan IPC::Run
or
[root@rl01 pgsql]# cpanm IPC::Run
--> Working on IPC::Run
Fetching https://www.cpan.org/authors/id/T/TO/TODDR/IPC-Run-20231003.0.tar.gz ... OK
Configuring IPC-Run-20231003.0 ... OK
Building and testing IPC-Run-20231003.0 ... OK
Successfully installed IPC-Run-20231003.0
1 distribution installed

Both takes long time but finally installed

dnf install perl-devel perl-generators rpm-build -y
cpan -i CPAN::Meta
cpan -i IPC::Run

But the postgresql only recognize rpm install of ipc::run

cpan2rpm IPC::Run

Finally fail every with rpmbuild






Thanks for confirming. You're right â€” as of now, **`perl(IPC::Run)` is *not available even in EPEL Next* for RHEL 9**, which is frustrating because it's a common dependency for packages like `postgresqlXX-devel`.

But donâ€™t worry â€” you still have a solid workaround.

---

## âœ… Option: Manually Install `IPC::Run` from CPAN or RPM

### ðŸ”§ Option 1: Install via CPAN (Recommended if you just need it working)
CPAN is the standard Perl package system. You can install `IPC::Run` like this:

```bash
dnf install perl-core make gcc -y
cpan IPC::Run
```

- The first line installs essential build tools.
- The second line will interactively install `IPC::Run` (may prompt the first time to configure CPAN).

You can check if it worked:

```bash
perl -MIPC::Run -e 1 && echo "Installed"
```

---

### ðŸ“¦ Option 2: Build an RPM for `perl-IPC-Run` (Advanced)
If you want to keep things strictly RPM-managed:

1. Download the source:
   ```bash
   wget https://cpan.metacpan.org/authors/id/T/TO/TODDR/IPC-Run-20231003.0.tar.gz
   ```

2. Extract and build:
   ```bash
   tar -xvzf IPC-Run-*.tar.gz
   cd IPC-Run-*
   perl Makefile.PL
   make
   make test
   make install
   ```

   *You can wrap this in an `.rpm` using `cpan2rpm`, but thatâ€™s more involved.*

---

### ðŸ’¡ TL;DR

To install `postgresql17-devel` and fix the missing dependency:

```bash
dnf install perl-core gcc make -y
cpan IPC::Run
dnf install postgresql17-devel postgresql17-test
```

Let me know if you want to skip `-devel` altogether or want a pre-built `.rpm` alternative â€” I can walk you through repackaging if needed.
